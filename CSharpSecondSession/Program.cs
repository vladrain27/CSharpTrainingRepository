using System;
using System.Diagnostics.CodeAnalysis;

public class Program
{
    private static void Main(string[] args)
    {
        //Console.WriteLine("Problem 1");
        //Problem1();

        //Console.WriteLine("Problem 2");
        //Problem2();

        //Console.WriteLine("Problem 3");
        //Problem3();

        //Console.WriteLine("Problem 4");
        //Problem4();

        //Console.WriteLine("Problem 5");
        //Problem5();

        //Console.WriteLine("Problem 6");
        //Problem6();

        Console.WriteLine("Problem 7");
        Problem7(55);
    }

    //
    // Write a program that reads a number from the keyboard.
    // Check whether that number is divisible by 7 and 11 or not.
    //
    public static void Problem1()
    {
        Console.WriteLine("Give a number");
        String consoleInput = Console.ReadLine();
        int number = int.Parse(consoleInput);
        Console.WriteLine("Checking if " + number + " is divisible by 7 and 11 or not");
        if (number % 7 == 0 && number % 11 == 0)
        {
            Console.WriteLine(number + " is divisible by both 7 and 11");
        } else
        {
            Console.WriteLine(number + " is NOT divisible by both 7 and 11");
        }
    }


    //
    // Check whether a given year is leap year or not.
    //
    public static void Problem2()
    {
        Console.WriteLine("Input a year");
        String consoleInput = Console.ReadLine();
        int year = int.Parse(consoleInput);
        Console.WriteLine("Checking if " + year + " is a leap year or not");
        if (year % 4 == 0)
        {
            Console.WriteLine(year + " is a leap year");
        }
        else
        {
            Console.WriteLine(year + " is NOT a leap year");
        }
    }

    //
    // By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.
    // What is the 47th prime number?
    //
    public static void Problem3()
    {
        int primeNumberCounter = 0;
        Boolean primeNumberEncountered;
        for (int index = 2; index < Int16.MaxValue; index++)
        {
            primeNumberEncountered = true;
            for (int index2 = 2; index2 <= Math.Sqrt(index); index2++)
            {
                if (index % index2 == 0)
                {
                    primeNumberEncountered = false;
                    break;
                }
            }

            if (primeNumberEncountered)
            {
                primeNumberCounter++;
            }

            if (primeNumberCounter == 47)
            {
                Console.WriteLine("The 47th prime number is " + index);
                break;
            }
        }
    }

    //
    // Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    // By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    // By considering the terms in the Fibonacci sequence whose values do not exceed 1000, find the sum of the even-valued terms.
    //
    public static void Problem4()
    {
        int firstNumber = 1;
        int secondNumber = 2;
        int fibonacciSum = 0;
        int fibonacciEvenSum = 0;

        while (fibonacciSum < 1000)
        {
            Console.WriteLine("1st number: " + firstNumber);
            Console.WriteLine("2nd number: " + secondNumber);

            if (secondNumber % 2 == 0)
            {
                fibonacciEvenSum += secondNumber;
            }

            fibonacciSum = firstNumber + secondNumber;
            firstNumber = secondNumber;
            secondNumber = fibonacciSum;

            Console.WriteLine("Sum: "+ fibonacciSum);
            Console.WriteLine("Even sum: " + fibonacciEvenSum);
        }

        Console.WriteLine(fibonacciSum);
        Console.WriteLine(fibonacciEvenSum);
    }

    //
    // Find the sum of digits of a number read from the keyboard.
    //
    public static void Problem5()
    {
        int sum = 0;
        Console.WriteLine("Input a number with multiple digits");
        string consoleInput = Console.ReadLine().Replace(" ", "");
        Array charArray = consoleInput.ToCharArray();
        string parsedStringElement;
        foreach (var element in charArray)
        {
            parsedStringElement = element.ToString();
            sum += int.Parse(parsedStringElement);
        }

        Console.WriteLine(sum);
    }

    //
    // Convert Binary 10011010 to Decimal number system.
    //
    public static void Problem6()
    {
        // To convert from binary to decimal we need to split each number and than apply d0×20 + d1×21 + d2×22
        string binaryString = "10011010";
        Array charArray = binaryString.ToCharArray();
        int length = binaryString.Length - 1;
        double sum = 0;
        int number = 0;
        foreach (var element in charArray)
        {
            number = int.Parse(element.ToString());
            sum += number * Math.Pow(2, length--);
        }

        Console.WriteLine(sum);
    }

    //
    // Find an optimal solution to the code that converts a decimal to binary
    //
    public static void Problem7(int number)
    {
        string binary = "";
        do
        {
            if (number % 2 == 0)
            {
                binary += "0";
            }
            else if (number % 2 == 1)
            {
                binary += "1";
            }
            number = number / 2;
        } while (number != 0);

        string reverseBinary = "";
        for (int i = binary.Length-1; i >= 0; i--) {
            reverseBinary += binary[i];
        }

        Console.WriteLine(reverseBinary);

        //if (number < 0)
        //{
        //    Console.WriteLine("Please give a positive number.");
        //    return;
        //}

        //int binary = 0;
        //int temp = 1;

        //while (number > 0)
        //{
        //    int r = number % 2;

        //    temp = temp * 10 + r;

        //    number /= 2;
        //}
        //while (temp > 0)
        //{
        //    binary = binary * 10 + temp % 10;

        //    temp = temp / 10;
        //}
        //binary = binary / 10;

        //Console.WriteLine(binary);
    }
}